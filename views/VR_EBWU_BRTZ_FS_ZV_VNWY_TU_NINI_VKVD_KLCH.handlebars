<head>
    <title>VR语言之数据流项目编写示例</title>
    <link rel="stylesheet" href="/css/style2.css" onload="console.log('CSS 文件已加载')">
</head>
<h2>VR语言之数据流项目编写示例</h2>
<form name="home" action="/" method="get">
    <button>go home</button>
</form>

<form name="VR_EBWU_ATRS" action="/VR_EBWU_ATRS" method="get">
    <button>VR语言教程</button>
</form>
<form name="VR_EBWU_BRTZ_FS" id="form_1" action="/VR_EBWU_BRTZ_FS" method="post">
    <hr>
    <input name="VDZV_2" hidden>
    <h4>3f项目</h4>
    <pre><code>
3f项目示例{2222}33，4，00：元素0 元素1 元素2 oth：-- ;//3f项目示例
3f项目示例{2223}33，，元素1 02:元素2 元素3 若显示空格请用“\ ”表示 ;//3f项目可用空格作为数组元素的分割标志
3f项目示例{2233}33,5，元素1 OTH：未定义 ;//3f项目范围参数单个字节可省略‘d’标识
3f项目示例{2233}33，4，'00:元素1'|||元素2 元素3|||,'06:元素5',|||元素6 元素7|||'oth:未定义';//3f项目插入元素示例，使用|||+插入内容+|||模式
{{!-- 3f项目示例{2233}3f 4 元素1 元素2 元素3//33或3f后面 后面可用空格替代逗号与后面的参数隔开。 --}}
3f项目示例{2233}s 4 元素1 元素2 元素3 //使用s标识符可以表示3f类型。
3f项目示例{2233}4 元素1 元素2 元素3 // 若存储范围为一个字节，可直接输入数字+空格+要显示的字符串
</code></pre>
    {{!-- <h4>cf项目</h4>
    <pre><code>
cf项目示例{2233}cf,、4、5，。0，km；//cf项目中可使用‘、’号表示英文字母‘d’，使用‘。’表示英文句号‘.’
cf项目示例{2233}44，、4、5*65535/65535。0，kmh ;//cf项目有些单位可省略/号
cf项目示例{2233}44，、4、5*65535/65535。0，摄氏度 ;//cf项目中文单位可自动转为通用符号
cf项目示例{2233}44，、4、5*65535/65535。0，sheshidu ;//cf项目拼音拼写的单位可自动转为通用符号
cf项目示例{2233}44\4\5*0.1=V ;//cf项目使用=号自动识别小数位数
cf项目示例{2233}44\4\5*0.1==V ;//cf项目使用==号自动识别小数位数
cf项目示例{2233}、4、5》》3== ;//cf项目有连续字节编号可不写cf标识
</code></pre> --}}
    <h4>全新cf项目、7f项目写法</h4>
    <pre>
    <code>
计算类项目示例{2222}=5-4 0.1 -1000 kmh ;// 5-4表示d5d4 0.1为系数 -1000为偏移量
计算类项目示例{2222}=(D4<<8)+D5 25.6/256 999+1 ;//通用计算类项目可用算式作为参数
计算类项目示例{2222}=4-5  -- ;//通用计算类项目可用2个负号表示7f项目
计算类项目示例{2233}=4 km ;//如果系数为1、偏移量为0可简写成这样
计算类项目示例{2233}=5-4 KOH ;//通用计算类项目可用KOH代替kΩ单位(大小写不敏感)，其他的单位也可以用类似的方法进行替换
    </code>
</pre>
    <h4>自动求数</h4>
    <pre>
    <code>
自动求数示例{2223}[4-5 65180=0xff00]-100 摄氏度 ;//这里的意思是，d4d5为0xff00时，设备显示65180，当d4d5为0时，偏移量为-100。VR会自动求出该项目的系数。
自动求数示例{2233}[4 0.1=1] 摄氏度 ;//自动求系数的计算类项目偏移值为0时可省略不写。
自动求数示例{2233}[4]-40 摄氏度 ;//自动求系数的计算类项目系数为1时可省略不写
自动求数示例{2233}[4]-40 摄氏度 -- ;//自动求系数的计算类项目转7f项目示例，只需要在后面加‘--’
自动求数示例{2233}[4-6 km]-40 ;//自动求系数的计算类项目省略系数不写时单位可写入括号内
自动求数示例{2233}[4 -39=0x59 -40=0x58]sheshidu ;//自动求系数和偏移值示例。 这个算法厉害了，VR可根据参数自动求出系数和偏移值。这里的意思是当d4为0x59时，设备显示-39，当d4为0x58时，设备显示-40.只要你输入类似这样的两对参数，VR就能自动求出算法。
自动求数示例{2233}【4 -39=0x59 -40=0x58】sheshidu ;//可以用【】代替[]
    </code>
</pre>
    <h4>限定数值范围(3c)</h4>
    <pre>
    <code>
限定数值范围示例{2233}[4-5 0.1=0x1][0.1-60] // 最后面一个中括号是用于限定算法结果的有效范围的，范围之外将设定为无效值。
限定数值范围示例{2233}[4 0.1=0X1]SHESHIDU[0.5-40.5 0xa0:短路] ;//限定数值范围示例，这里表示算法结果为0.5-40.5时为有效范围，在0xa0时输出字符串‘短路’，其他的情况则自动赋予‘无效数据’。
限定数值范围示例{2233}[4 0.1=0X1]SHESHIDU[-10.5-45.5 0xA0-0xA2:短路 0xff:未知故障] -- ;//限定数值范围之有符号数。这里很特别，整个算法是7f类型，当算法结果为-10.5至45.5时有效。VR可将该项目算法以3c的形式表达出来。
    </code>
</pre>
    {{!-- <h4>7f项目</h4>
    <pre><code>
7f项目示例{2222}77，128，-256，、4*256+、5。0，V ;//7f项目示例
</code></pre> --}}
    <h4>21项目</h4>
    <pre>
    <code>
{{!-- 21项目示例{2222}22，，01，是】否 ;//21项目示例 --}}
21项目示例{2222}224 是】否01 ;//21项目示例，可使用】或【表示'|'
21项目示例{2222}224 是【否01 ;//21项目示例，可使用】或【表示'|'
    </code>
</pre>
    <h4>0a项目示例</h4>
    <pre>
    <code>
0a项目示例{2222}09，4-7,8,9-10;//0a项目示例
0a项目示例{2222}a 4 ;//0a项目示例
0a项目示例{2222}09 4 ;//0a项目示例
    </code>
</pre>

    <h4>16项目</h4>
    <pre>
    <code>
16项目示例{2223}H 4-6;//16项目示例
16项目示例{2223}16 4-6;//16项目示例
    </code>
</pre>
    <h4>10项目</h4>
    <pre>
    <code>
10项目示例{2223}10 4-6;//10项目示例
10项目示例{2223}d 4-6;//10项目示例
    </code>
</pre>
    <h4>bb项目</h4>
    <pre>
    <code>
bb项目示例{2222}88  20+ 4 年+ 6-7h 8A -+ 9a ;//bb项目示例(字符串用+号标识)
bb项目示例{2223}88 20+ 4h 年 5h 月 6h 日 + 7h 时 ;//bb项目非字节标识自动转为字符串
bb项目示例{2223}88 20+ 4a 年 5 月 6 日 + 7h 时 =h ;//bb项目可用=号统一字节标识类型
bb项目示例{2223}88 20+ 4d 年 5 月 6 日 + 7h 时 =h ;//bb项目可用d号表示十进制类型
bb项目示例{2223}88 20+ 4年5月 6日7时8分 ;//bb项目默认中文和数字自动分开，当你输入该条指令后，VR会先将4年5月进行拆分变为‘4 年 5 月’，然后再进行解析。
bb项目示例{2223}88 20+ 4年5月 6日7时8分=2 ;//bb项目‘=2’标识可将连体的中文和数字视为字符串
    </code>
</pre>
    <h4>1f项目</h4>
    <pre>
    <code>
1f项目示例{2222}88  4-5w . 4-5q 4-5b . 4-5s 4-5g;
1f项目示例{2222}v 4-5 1.23.45;// 这里使用了v标识，其中第二个参数4-5表示该信息范围为d4到d5, 1.23.45 表示要在万位后面、百位后面加'.'
    </code>
</pre>
    <h4>多位激活项目</h4>
    <pre>
    <code>
多位激活项目示例{2222}M 4-5 无效 条件1 条件2 条件3 条件4 100：条件5 条件6; //4-5表示该信息范围为d4到d5，后面的字符串如果没有显示声明其激活值，则程序将按'0、1、2、4、8、10、20、40、80'赋予激活值。
    </code>
</pre>
    <h4>其他示例</h4>
    <pre><code>
简写示例{2233}33，，’00：’，’oth：---‘ ;//如果有效字节是d4可省略不写
    </code></pre>
<h3 id="运行示例">运行示例</h3>
<p>点击下面的<code>提交</code>按钮，你将看到上述所有示例的运行结果</p>
    <br>
    <button>提交</button>
</form>
<form name="eytr_dyih_zjqt" action="/eytr_dyih_zjqt" method="get">
    <button>单位代号查询</button>
</form>
<div>
    <script>var module = {};</script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" onload="console.log('jquery Sdbc')"></script>
    <script src="/wk_mk_html_code.js" onload="console.log('Sdbc wk_mk_html_code')"></script>
    <script>
        var rj_1;
        var rj_kp;
        var vnwm_dvvy_kp = []
        $(document).ready(function () {
            var vnwm_ubqt_dvvy = document.getElementsByTagName("pre");
            for (fo1 in vnwm_ubqt_dvvy) {
                //for (fo2 in vnwm_ubqt_dvvy[fo1]) {
                //if (/3f/.test(String(vnwm_ubqt_dvvy[fo1][fo2]))) {
                //                        console.log(fo2 + ":" + vnwm_ubqt_dvvy[fo1][fo2] + "--------------")
                //}
                //}
                var rj_kp = vnwm_ubqt_dvvy[fo1].outerHTML
                if (rj_kp != undefined) {
                    vnwm_dvvy_kp.push(vnwm_ubqt_dvvy[fo1].textContent)
                    var rj_1 = rj_kp
                    var rj_2 = wk_mk_html_code(rj_1, 'javascript')
                    vnwm_ubqt_dvvy[fo1].outerHTML = rj_2
                }
            }
        });
        document.VR_EBWU_BRTZ_FS.onsubmit = function () {
            document.VR_EBWU_BRTZ_FS.VDZV_2.value = vnwm_dvvy_kp.join('\n').replace(/\n/g, '<br>')//.replace(/&lt;/ig,"<");
            return true; // 提交表单
        }
    </script>
</div>
<div>
    <h1 id="使用帮助">使用帮助</h1>
    <ul>
        <li>
            <p>你可以直接在VR语言解释窗口的输入窗口输入这样的数据流项目，点击提交或者执行按钮，然后在输出窗口中可以看到转化为彭语言形式的数据流项目</p>
        </li>
        <li>
            <p>如果你输入的是纯彭语言行形式的数据流项目，那么VR语言同样会将其二次解释成彭语言，然后进行格式规范化。所以你可以使用VR语言解释窗口对所有合法形式的数据流项目进行规范化。比如括号对齐、添加oth等。</p>
        </li>
        <li>
            <p>谢谢浏览</p>
        </li>
    </ul>
</div>